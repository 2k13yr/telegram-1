buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.3+'
    }
}

repositories {
    mavenCentral()
    maven {
        url "http://maven.telegram-s.org/archiva/repository/internal/"
    }
}

project.group = "org.telegram"

apply plugin: 'android'

dependencies {
    // Android basic dependencies
    compile "com.nineoldandroids:library:2.4.0"
    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
    compile 'com.android.support:support-v4:19.0.+'
    compile 'com.google.android.gms:play-services:4.0.+'

    // Telegram api
    compile project(':tl-core')
    compile project(':mtproto')
    compile files('../libraries/telegram-api/libs/tl-api-v9.jar')
    compile project(':telegram-api')

    // Ui dependencies
    compile "org.telegram:android-images:1.0.+"
    compile "org.telegram:viewpageindicator:1.2.2"
    compile 'org.telegram:photoview:1.2.2'

    // Jars
    compile files('libs/gcm.jar')
    compile files('libs/libphonenumber-5.9.jar')
    compile files('libs/crittercism-sdkonly-4.3.0.jar')
    compile files('libs/ormlite-core-4.47.jar')
    compile files('libs/ormlite-android-4.47.jar')
}

def basicVersion = '1.3'
def customVersionCode = '10240';

if (project.hasProperty('buildIndex')) {
    project.version = basicVersion + '.' + project.buildIndex
    customVersionCode = '' + project.buildIndex
} else {
    project.version = 'debug'
}

android {
    compileSdkVersion 17
    buildToolsVersion "19.0.0"

    if (project.hasProperty("signStorage")) {
        signingConfigs {
            release {
                storeFile file(project.signStorage)
                storePassword project.signStPass
                keyAlias project.signAlias
                keyPassword project.signKePass
            }
        }

        buildTypes {
            debuggable.initWith(buildTypes.release)
            debuggable {
                signingConfig signingConfigs.release
                debuggable true
            }

            release {
                signingConfig signingConfigs.release
            }

            applicationVariants.all { variant ->
                def file = variant.outputFile
                variant.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
            }
        }
    }

    defaultConfig {
        versionCode Integer.valueOf(customVersionCode)
        versionName project.version
    }

    productFlavors {
        common {
        }
        mdpi {
        }
        hdpi {
        }
        xhdpi {
        }
        xxhdpi {
        }
        dctest {
            packageName 'org.telegram.android.debug'
        }
        beta {
            packageName 'org.telegram.android.beta'
        }
        dev {
        }
    }

    sourceSets {
        main {
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            java.srcDirs = ['src/main/java']
        }

        common {
            res.srcDirs = ['src/res-mdpi/res', 'src/res-hdpi/res', 'src/res-xhdpi/res', 'src/res-xxhdpi/res']
            assets.srcDirs = ['src/res-common/assets']
            java.srcDirs = ['src/dc-production/java', 'src/keys-prime/java']
        }

        dev {
            res.srcDirs = ['src/res-mdpi/res', 'src/res-hdpi/res', 'src/res-xhdpi/res', 'src/res-xxhdpi/res']
            assets.srcDirs = ['src/res-common/assets']
            java.srcDirs = ['src/dc-production/java', 'src/keys-prime/java']
        }

        beta {
            res.srcDirs = ['src/res-mdpi/res', 'src/res-hdpi/res', 'src/res-xhdpi/res', 'src/res-xxhdpi/res', 'src/translation-ru']
            assets.srcDirs = ['src/res-common/assets']
            java.srcDirs = ['src/dc-production/java', 'src/keys-beta/java']
        }

        dctest {
            res.srcDirs = ['src/res-mdpi/res', 'src/res-hdpi/res', 'src/res-xhdpi/res', 'src/res-xxhdpi/res', 'src/dc-test/res']
            assets.srcDirs = ['src/res-common/assets']
            java.srcDirs = ['src/dc-test/java', 'src/keys-prime/java']
        }

        mdpi {
            res.srcDirs = ['src/res-mdpi/res']
            assets.srcDirs = ['src/res-mdpi/assets']
            java.srcDirs = ['src/dc-production/java']
        }

        hdpi {
            res.srcDirs = ['src/res-hdpi/res']
            assets.srcDirs = ['src/res-hdpi/assets']
            java.srcDirs = ['src/dc-production/java']
        }

        xhdpi {
            res.srcDirs = ['src/res-xhdpi/res']
            assets.srcDirs = ['src/res-xhdpi/assets']
            java.srcDirs = ['src/dc-production/java']
        }

        xxhdpi {
            res.srcDirs = ['src/res-xxhdpi/res']
            assets.srcDirs = ['src/res-xxhdpi/assets']
            java.srcDirs = ['src/dc-production/java']
        }
    }
}

task lightDist(dependsOn: ['assembleCommonRelease', 'assembleCommonDebuggable', 'assembleDctestDebuggable', 'assembleBetaRelease']) << {
}

task dist(dependsOn: ['assembleCommonRelease', 'assembleCommonDebuggable', 'assembleDctestDebuggable', 'assembleBetaRelease', 'assembleHdpiRelease', 'assembleMdpiRelease', 'assembleXhdpiRelease', 'assembleXxhdpiRelease']) << {
}