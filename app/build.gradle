buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.3+'
    }
}

repositories {
    mavenCentral()
    maven {
        url "http://maven.81port.com/archiva/repository/internal/"
    }
}

project.group = "org.telegram"

apply plugin: 'android'

dependencies {
    // Android basic dependencies
    compile "com.nineoldandroids:library:2.4.0"
    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
    compile 'com.android.support:support-v4:19.0.+'
    compile 'com.google.android.gms:play-services:4.0.+'

    // Telegram api
    compile project(':tl-core')    
    compile project(':mtproto')
    compile files('../libraries/telegram-api/libs/tl-api-v9.jar')
    compile project(':telegram-api') 

    // Ui dependencies
    compile "org.telegram:android-images:1.0.+"
    compile "org.telegram:viewpageindicator:1.2.2"
    compile 'org.telegram:photoview:1.2.2'

    // Jars
    compile files('libs/gcm.jar')
    compile files('libs/crittercism-sdkonly-4.3.0.jar')
    compile files('libs/ormlite-core-4.47.jar')
    compile files('libs/ormlite-android-4.47.jar')
}

def basicVersion = '1.2'
def customVersionCode = '1024';

if (project.hasProperty('buildIndex')) {
    project.version = basicVersion + '.' + project.buildIndex
    customVersionCode = '' + project.buildIndex
} else {
    project.version = 'debug'
}

android {
    compileSdkVersion 17
    buildToolsVersion "19.0.0"

    if (project.hasProperty("signStorage")) {
        signingConfigs {
            release {
                storeFile file(project.signStorage)
                storePassword project.signStPass
                keyAlias project.signAlias
                keyPassword project.signKePass
            }
        }
        buildTypes {
            release {
                signingConfig signingConfigs.release

                applicationVariants.all { variant ->
                    def file = variant.outputFile
                    variant.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
                }
            }
        }
    }

    defaultConfig {
        versionCode Integer.valueOf(customVersionCode)
        versionName project.version
    }

    productFlavors {
        common {
        }
        mdpi {
        }
        hdpi {
        }
        xhdpi {
        }
        xxhdpi {
        }
    }

    sourceSets {
        main.res.srcDirs = ['src/main/res']
        common.res.srcDirs = ['src/res-mdpi/res', 'src/res-hdpi/res', 'src/res-xhdpi/res', 'src/res-xxhdpi/res']
        mdpi.res.srcDirs = ['src/res-mdpi/res']
        hdpi.res.srcDirs = ['src/res-hdpi/res']
        xhdpi.res.srcDirs = ['src/res-xhdpi/res']
        xxhdpi.res.srcDirs = ['src/res-xxhdpi/res']
    }
}